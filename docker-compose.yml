
services:
  create-medical:
    build:
      context: ./create-medical
      dockerfile: Dockerfile
    container_name: create-medical
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  delete-medical:
    build:
      context: ./delete-medical
      dockerfile: Dockerfile
    container_name: delete-medical
    ports:
      - "5005:5005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  get-all-medical:
    build:
      context: ./get-all-medical
      dockerfile: Dockerfile
    container_name: get-all-medical
    ports:
      - "5004:5004"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  latest-medical:
    build:
      context: ./latest-medical
      dockerfile: Dockerfile
    container_name: latest-medical
    ports:
      - "5003:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  update-medical:
    build:
      context: ./update-medical
      dockerfile: Dockerfile
    container_name: update-medical
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
